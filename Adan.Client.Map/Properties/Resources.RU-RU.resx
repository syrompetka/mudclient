<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Комментарии:</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Описание:</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="GotoThisRoom" xml:space="preserve">
    <value>Идти в эту комнату</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ок</value>
  </data>
  <data name="RoadMap" xml:space="preserve">
    <value>Карта дорог</value>
  </data>
  <data name="RoomActions" xml:space="preserve">
    <value>Действия при заходе в эту комнату:</value>
  </data>
  <data name="RoomAlias" xml:space="preserve">
    <value>Псевдоним:</value>
  </data>
  <data name="RoomColor" xml:space="preserve">
    <value>Цвет:</value>
  </data>
  <data name="RoomColorContext" xml:space="preserve">
    <value>Цвет</value>
  </data>
  <data name="RoomComments" xml:space="preserve">
    <value>Комментарии:</value>
  </data>
  <data name="RoomEditor" xml:space="preserve">
    <value>Редактор комнат</value>
  </data>
  <data name="RoomIcon" xml:space="preserve">
    <value>Иконка:</value>
  </data>
  <data name="RoomIconContext" xml:space="preserve">
    <value>Иконка</value>
  </data>
  <data name="RoomNavigationError" xml:space="preserve">
    <value>Невозможно пройти в указанную комнату.</value>
  </data>
  <data name="RouteRecordingCanceled" xml:space="preserve">
    <value>Запись маршрут отменена.</value>
  </data>
  <data name="RouteRecordingStarted" xml:space="preserve">
    <value>Начата запись маршрута из '{0}'.</value>
  </data>
  <data name="RouteRecordingStopped" xml:space="preserve">
    <value>Маршрут из '{0}' в '{1}' создан.</value>
  </data>
  <data name="Routes" xml:space="preserve">
    <value>Маршруты</value>
  </data>
  <data name="RoutesAreNotAvailable" xml:space="preserve">
    <value>Нет доступных маршрутов из текущей комнаты</value>
  </data>
  <data name="RoutesCancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="RoutesCancelRecording" xml:space="preserve">
    <value>Отменить запись текущего маршрута</value>
  </data>
  <data name="RoutesChoose" xml:space="preserve">
    <value>Идти в ...</value>
  </data>
  <data name="RoutesCreate" xml:space="preserve">
    <value>Начать запись нового маршрута</value>
  </data>
  <data name="RoutesDelete" xml:space="preserve">
    <value>Удалить маршрут</value>
  </data>
  <data name="RoutesHelp" xml:space="preserve">
    <value>Напечатать справку</value>
  </data>
  <data name="RoutesStop" xml:space="preserve">
    <value>Остановить текущий маршрут</value>
  </data>
  <data name="RoutesStopRecording" xml:space="preserve">
    <value>Закончить запись текущего маршрута</value>
  </data>
  <data name="RouteStarted" xml:space="preserve">
    <value>Начать маршрут в '{0}'.</value>
  </data>
  <data name="RouteStartNameCanNotBeEmpty" xml:space="preserve">
    <value>Название начала маршрута не может быть пустой строкой.</value>
  </data>
  <data name="RouteTargetIsNotAvailable" xml:space="preserve">
    <value>Пункт назначения '{0}' не доступен из текущей комнаты.</value>
  </data>
  <data name="RoutePointName" xml:space="preserve">
    <value>Название точки маршрута</value>
  </data>
  <data name="RoutePointNameEnter" xml:space="preserve">
    <value>Название точки маршрута:</value>
  </data>
  <data name="RouteStopped" xml:space="preserve">
    <value>Маршрут остановлен.</value>
  </data>
  <data name="RouteAlreadyExistsTitle" xml:space="preserve">
    <value>Маршрут уже существует.</value>
  </data>
  <data name="RoutePointNameNotUnique" xml:space="preserve">
    <value>Точка маршрута с именем '{0}' уже существует.</value>
  </data>
  <data name="RouteDeletedMessage" xml:space="preserve">
    <value>Маршрут из '{0}' в '{1}' удален.</value>
  </data>
  <data name="RouteDeleteSelect" xml:space="preserve">
    <value>Выберите маршрут, который вы хотите удалить:</value>
  </data>
  <data name="RouteDeleteTitle" xml:space="preserve">
    <value>Удаление маршрута</value>
  </data>
  <data name="RouteDestinationSelect" xml:space="preserve">
    <value>Выберить пункт назначения:</value>
  </data>
  <data name="RouteDestinationSelectTitle" xml:space="preserve">
    <value>Выбор пункта назначения.</value>
  </data>
  <data name="RouteGroupMateLostOrTired" xml:space="preserve">
    <value>Один из согруппников отстал или устал.</value>
  </data>
  <data name="RouteTargetAchieved" xml:space="preserve">
    <value>Маршрут в '{0}' завершен.</value>
  </data>
  <data name="RouteCommandCancelRecording" xml:space="preserve">
    <value>отмена</value>
  </data>
  <data name="RouteCommandGoto" xml:space="preserve">
    <value>идти</value>
  </data>
  <data name="RouteCommandPrefix" xml:space="preserve">
    <value>маршрут</value>
  </data>
  <data name="RouteCommandStartRecording" xml:space="preserve">
    <value>начало</value>
  </data>
  <data name="RouteCommandStop" xml:space="preserve">
    <value>стоп</value>
  </data>
  <data name="RouteCommandStopRecording" xml:space="preserve">
    <value>конец</value>
  </data>
  <data name="RouteHelpCancelRecording" xml:space="preserve">
    <value>"маршрут отмена" - прекращает запись текущего маршрута без сохранения.</value>
  </data>
  <data name="RouteHelpGoto" xml:space="preserve">
    <value>"идти &lt;псевдоним|название комнаты&gt;" - отводит перснажа в комнату с указанным псевдонимов/названием в рамках текущей зоны.</value>
  </data>
  <data name="RouteHelpRoute" xml:space="preserve">
    <value>"маршрут идти &lt;пункт назначения&gt;" - отводит персонажа в указанную точку.</value>
  </data>
  <data name="RouteHelpStartRecording" xml:space="preserve">
    <value>"маршрут начало &lt;название начальной точки&gt;" - начинает запись нового маршрута.</value>
  </data>
  <data name="RouteHelpStopRecording" xml:space="preserve">
    <value>"маршрут конец &lt;название конечной точки&gt;" - останавливает запись текущего маршрута.</value>
  </data>
  <data name="RouteHelpStopRoute" xml:space="preserve">
    <value>"маршрут стоп" - прекращает вести персонажа по ранее выбранному маршруту.</value>
  </data>
  <data name="RouteHelpHelp" xml:space="preserve">
    <value>"маршрут справка" - отображает эту справку.</value>
  </data>
  <data name="RouteSpecifiedRoomDoesNotExists" xml:space="preserve">
    <value>Указанная комната не существует.</value>
  </data>
  <data name="RouteCommandHelp" xml:space="preserve">
    <value>справка</value>
  </data>
  <data name="RouteAlreadyExistsQuestion" xml:space="preserve">
    <value>Маршрут из '{0}' в '{1}' уже существует. Переписать?</value>
  </data>
</root>